/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import java.util.Arrays;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Random;
import java.util.Scanner;
import java.util.Set;

/**
 *
 * @author Win 8.1 Version 2
 */
public class act1 {

    static Scanner sc = new Scanner(System.in);

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {

        System.out.println("Input size: ");
        int n = sc.nextInt();
        int[] arr = new int[n];
        for (int i = 0; i < n; i++) {
            System.out.println("Input element " + i + ": ");
            arr[i] = sc.nextInt();
        }
//        System.out.println(System.currentTimeMillis());
//        System.out.println(solve(arr));
//        System.out.println(System.currentTimeMillis());
//        System.out.println("Max SubSum of arr: " + solve2(arr));
//        Set<Integer> set = new HashSet<>();
//        set.add(3);
//        System.out.println("Set contain 3: " + set.contains(3));
//        HashMap<Integer, String> Map = new HashMap<>();
        solve_ex1();
        solve_ex2();
    }

    public static void solve_ex1() {
        System.out.println("Input a: ");
        float a = sc.nextFloat();
        System.out.println("Input b: ");
        float b = sc.nextFloat();
        int tmp_a = Math.round(a * 1000);
        int tmp_b = Math.round(b * 1000);
        if (a == b) {
            System.out.println("Two floating-point numbers are same up to three decimal places");
        } else {
            System.out.println("No same");
        }
    }

    public static void solve_ex2() {
        Random rand = new Random();
        System.out.println("Input size: ");
        int n =sc.nextInt();
        int[] arr =new int[n];
        for(int i=0;i<n;i++){
            arr[i]  = rand.nextInt();
        }
        for(int i=0;i<n;i++){
            System.out.print(arr[i] + " ");
        }
    }

    public static int solve(int[] arr) {
        int res = 0;
        for (int i = 0; i < arr.length; i++) {
            int sum = arr[i];
            res = Math.max(res, sum);
            for (int j = i + 1; j < arr.length; j++) {
                sum += arr[j];
                res = Math.max(res, sum);
            }
        }
        return res;
    }
    
    public static void solve_1(){
        System.out.println("Input name: ");
        String name = sc.nextLine();
        int cnt = 0;
        for(int i=0;i<name.length();i++){
            if(name.charAt(i)==' '){
                cnt++;
            }
        }
        System.out.println("Spaces: "+cnt);
    }
    
    public static void solve_2(){
        System.out.println("Input size: ");
        int n =sc.nextInt();
        int res = Integer.MIN_VALUE;
        int[] arr = new int[n];
        for(int i=0;i<n;i++){
            System.out.println("Input element "+i+":");
            arr[i]=sc.nextInt();
            res= Math.max(res, arr[i]);
        }
        System.out.println("Maximum element: "+ res);
    }
    
    public static void solve_3(){
        System.out.println("Input size: ");
        int n =sc.nextInt();
        int res = Integer.MIN_VALUE;
        int[] arr = new int[n];
        for(int i=0;i<n;i++){
            System.out.println("Input element "+i+":");
            arr[i]=sc.nextInt();
            res= Math.max(res, arr[i]);
        }
        Arrays.sort(arr);
        System.out.println("Array sorted: ");
        for(int i=0;i<n;i++){
            System.out.println(arr[i]+" ");
        }
        System.out.println("Maximum element: "+ res);
    }
    
    public static void solve_4(){
        System.out.println("Input size: ");
        int n =sc.nextInt();
        int res = Integer.MIN_VALUE;
        String[] arr = new String[n];
        for(int i=0;i<n;i++){
            System.out.println("Input name "+i+":");
            arr[i]=sc.nextLine();
        }
        System.out.println("Input name searching: ");
        String name = sc.nextLine();
        int pos = -1;
        for(int i=0;i<n;i++){
            if(arr[i].equals(name)){
                pos = i;
                break;
            }
        }
        if(pos == -1){
            System.out.println("Not found name");
        }
        else{
            System.out.println("Found name at "+ pos);
        }
    }

    public static int solve2(int[] arr) {
        int res = 0;
        int tmp = 0;
        for (int i = 0; i < arr.length; i++) {
            tmp += arr[i];
            res = Math.max(res, tmp);
            if (tmp < 0) {
                tmp = 0;
            }
        }
        return res;
    }
}
